# 무게 W와 가치 V
# 해당 물건을 배낭에 넣어서 가면 준서가 V만큼 즐길 수 있다.
# K만큼의 무게만을 넣을 수 있는 배낭만 들고 다닐 수 있다
# 배낭에 넣을 수 있는 물건들의 가치의 최댓값

import sys

Bag = []

# 첫 줄에 물품의 수 N(1 ≤ N ≤ 100)과 준서가 버틸 수 있는 무게 K(1 ≤ K ≤ 100,000)가 주어진다. 
N, K = map(int, sys.stdin.readline().strip().split())

# 두 번째 줄부터 N개의 줄에 거쳐 각 물건의 무게 W(1 ≤ W ≤ 100,000)와 해당 물건의 가치 V(0 ≤ V ≤ 1,000)가 주어진다.
for _ in range(N):
    W, V = map(int, sys.stdin.readline().strip().split())
    Bag.append((W, V))

dp = [0] *(K+1)

# 한 줄에 배낭에 넣을 수 있는 물건들의 가치합의 최댓값을 출력한다.

for w, v in Bag: # 모든 물건들에 대해 하나씩 순회하는 반복문
    for i in range(K, w-1, -1): # 무게가 큰 것부터 작은 쪽으로 갱신 --> 현재 물건을 기준으로 배낭의 무게 제한 K부터 역순으로 훑는 반복문
        
        dp[i] = max(dp[i], dp[i - w] + v) # 현재 배낭 용량이 i일 때, 넣을 수 있는 최댓값을 갱신
        # dp[i] = 무게가 i일 때의 최대 가치 / dp[i-w] + v = 현재 물건을 넣었을 때의 가치
        # if w = 3, v = 5, i = 5 --> 무게가 5인 배낭에 이 물건(무게 3, 가치 5)을 넣는게 이득인지 판단
          
print(max(dp))